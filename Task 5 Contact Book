import json
import os

class ContactBook:
    def __init__(self, file_name="contacts.json"):
        self.file_name = file_name
        self.load_contacts()

    def load_contacts(self):
        if os.path.exists(self.file_name):
            with open(self.file_name, "r") as file:
                self.contacts = json.load(file)
        else:
            self.contacts = []

    def save_contacts(self):
        with open(self.file_name, "w") as file:
            json.dump(self.contacts, file, indent=4)

    def add_contact(self, name, phone, email, address):
        contact = {
            "name": name,
            "phone": phone,
            "email": email,
            "address": address
        }
        self.contacts.append(contact)
        self.save_contacts()
        print(f"Contact '{name}' added.")

    def view_contacts(self):
        if not self.contacts:
            print("No contacts found.")
            return
        for contact in self.contacts:
            print(f"Name: {contact['name']}, Phone: {contact['phone']}")

    def search_contact(self, query):
        results = [contact for contact in self.contacts if query.lower() in contact["name"].lower() or query in contact["phone"]]
        if results:
            for contact in results:
                self.display_contact(contact)
        else:
            print("No contact found.")

    def update_contact(self, query):
        for contact in self.contacts:
            if query.lower() in contact["name"].lower() or query in contact["phone"]:
                self.display_contact(contact)
                contact["name"] = input("Enter new name: ")
                contact["phone"] = input("Enter new phone number: ")
                contact["email"] = input("Enter new email: ")
                contact["address"] = input("Enter new address: ")
                self.save_contacts()
                print("Contact updated.")
                return
        print("No contact found.")

    def delete_contact(self, query):
        for contact in self.contacts:
            if query.lower() in contact["name"].lower() or query in contact["phone"]:
                self.contacts.remove(contact)
                self.save_contacts()
                print("Contact deleted.")
                return
        print("No contact found.")

    def display_contact(self, contact):
        print(f"Name: {contact['name']}")
        print(f"Phone: {contact['phone']}")
        print(f"Email: {contact['email']}")
        print(f"Address: {contact['address']}")

def main():
    contact_book = ContactBook()

    print("Welcome to Contact Book")

    while True:
        print("\nMenu:")
        print("1. Add Contact")
        print("2. View Contacts")
        print("3. Search Contact")
        print("4. Update Contact")
        print("5. Delete Contact")
        print("6. Exit")

        choice = input("Enter your choice: ")

        if choice == "1":
            name = input("Enter name: ")
            phone = input("Enter phone number: ")
            email = input("Enter email: ")
            address = input("Enter address: ")
            contact_book.add_contact(name, phone, email, address)
        elif choice == "2":
            contact_book.view_contacts()
        elif choice == "3":
            query = input("Enter name or phone number to search: ")
            contact_book.search_contact(query)
        elif choice == "4":
            query = input("Enter name or phone number to update: ")
            contact_book.update_contact(query)
        elif choice == "5":
            query = input("Enter name or phone number to delete: ")
            contact_book.delete_contact(query)
        elif choice == "6":
            print("Exiting Contact Book. Goodbye!")
            break
        else:
            print("Invalid choice. Please try again.")

if __name__ == "__main__":
    main()
